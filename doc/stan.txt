*stan-vim.txt* Vim plugin for the Stan probabilistic programming language.
*stan-vim*
*stan*

                               `..--::::--..`                                 ~
                            `-::::::::::::--.`                                ~
                          `-:::::::--..``                                     ~
                         .::::::-.`                                           ~
                        -::::::-          ```...----                          ~
                       .::::::-   ``..---:::::::::::.                         ~
                       -:::::-.......---::::::::::::-                         ~
                       ::::::--...........--:::::::::                         ~
                       -:::::::::----.......-:::::::-                         ~
                       .:::::::::::::::---..-:::::::.                         ~
                        -:::::::::::::--.``.:::::::-                          ~
                         .:::::--..````..-::::::::.                           ~
                          `......---::::::::::::-`                            ~
                            `.-::::::::::::::-.`                              ~
                               `..---::---..``  (R)                           ~
                       _                         _                            ~
                   ___| |_ __ _ _ __      __   _(_)_ __ ___                   ~
                  / __| __/ _` | '_ \ ____\ \ / / | '_ ` _ \                  ~
                  \__ \ || (_| | | | |_____\ V /| | | | | | |                 ~
                  |___/\__\__,_|_| |_|      \_/ |_|_| |_| |_|                 ~

===============================================================================
CONTENTS                                                        *stan-contents*

  1. Introduction.....................................|stan-intro|
  2. Installation.....................................|stan-install|
  3. Features.........................................|stan-features|
  4. License..........................................|stan-license|
  5. Contributing.....................................|stan-contrib|
  6. Credits..........................................|stan-credits|

===============================================================================
INTRODUCTION                                                       *stan-intro*

Vim plugin for the Stan (http://mc-stan.org) probabilistic programming language.

Homepage: https://github.com/eigenfoo/stan-vim

Features include:

  * Syntax highlighting of Stan types, keywords and built-in functions.
  * Automatic indentation consistent the recommended Stan code style.
  * Folding via code indentation.
  * Autocompletion of Stan keywords and functions via the Vim built-in
    `omnifunc`.

===============================================================================
INSTALLATION                                                     *stan-install*

  * For Vundle users, place this in your `.vimrc`:

        Plugin 'eigenfoo/stan-vim'

    then run the following in Vim:

        :source %
        :PluginInstall

  * For Vundle versions < 0.10.2, replace `Plugin` with `Bundle` above.
  * For NeoBundle users, replace `Plugin` with `NeoBundle` above.
  * For VimPlug users, replace `Plugin` with `Plug` above.
  * For Pathogen users, run the following from the terminal:

        cd ~/.vim/bundle
        git clone https://github.com/eigenfoo/stan-vim

  * For manual installation, copy all files into your `~/.vim` directory.

===============================================================================
FEATURES                                                        *stan-features*

  * stan-vim supports syntax highlighting of Stan types, keywords and built-in
    functions, including sampling statements and random number generators. All
    syntax is manually defined in `syntax/stan.vim`.

    - Note that while strings are supported by Stan (mainly for `print` and
      `reject` statements), Stan does not allow the backslash or doublequote
      characters in strings. However, stan-vim will still highlight strings with
      a backslash character in them.

    - Refer to `syntax/stan.vim` for details.

  * stan-vim supports automatic indentation consistent the recommended Stan code
    style: that is, 2 spaces and no tabs.

    - This is achieved by `setlocal expandtab`, and locally setting `tabstop`
      and `shiftwidth` variables to 2.

    - Furthermore, Vim will reindent when "closing characters" (such as `then`,
      `else, and `}`) are entered. This is achieved by locally setting
      `indentkeys`.

    - Refer to `indent/stan.vim` for details.

  * stan-vim supports folding via code indentation: that is, Vim will use code
    indentation to determine which lines to fold. Thus, folding is dependent on
    the recommended (or at least, consistent) indentation of Stan programs.

    - This is achieved by `setlocal foldmethod=indent`.

    - Refer to `ftplugin/stan/folding.vim` for details.

  * stan-vim supports autocompletion of Stan keywords and functions via Vim's
    built-in `omnifunc`.

    - Press Ctrl-X Ctrl-O in Insert mode to activate it.

    - If you use a separate autocompletion plugin (always recommended!) such as
      YouCompleteMe, the plugin will likely make use of this `omnifunc` to offer
      completions.

    - The autocompletion is achieved by `setlocal
      omnifunc=syntaxcomplete#Complete`

    - Refer to `ftplugin/stan/autocomplete.vim` for details.

  * stan-vim can issue an external command to a local copy of CmdStan to compile
    the current file.

    - To do this, configure

      `let g:cmdstan_path = "~/cmdstan/"`

      either in your `.vimrc` or upon opening a Stan file (if running from Vim,
      remember to enter command mode by hitting `:`). By default, the
      `g:cmdstan_path` variable is set to `"~/cmdstan/"`.

    - Then the keybinding `<localleader>c` will compile the current Stan file.

===============================================================================
LICENSE                                                          *stan-license*

stan-vim is distributed under the MIT license. See the license file on GitHub:

      https://github.com/eigenfoo/stan-vim/blob/master/LICENSE

===============================================================================
CONTRIBUTING                                                     *stan-contrib*

stan-vim is developed and maintained in a public repository on GitHub.

      https://github.com/eigenfoo/stan-vim

If you have a bug report, feature request or other question, please file an
issue on GitHub:

      https://github.com/eigenfoo/stan-vim/issues

If you would like to send a patch or other code contribution to stan-vim, please
submit a pull request through GitHub:

      https://github.com/eigenfoo/stan-vim/pulls

===============================================================================
CREDITS                                                          *stan-credits*

  * stan-vim contributors:

        https://github.com/eigenfoo/stan-vim/graphs/contributors

  * Steve Losh for his book, Learn Vimscript the Hard Way

        http://learnvimscriptthehardway.stevelosh.com/

  * Other Vim plugins for inspiration (specifically, stan.vim, mc-stan.vim and
    elm.vim)

